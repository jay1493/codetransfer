# Application must not contain colon(:) and dot(.)
spring.application.name=chatEvents-v0

server.port=9090
server.servlet-path=/endpoints

# zipkin tracing configuration
spring.sleuth.sampler.percentage=0.05

#aerospike
app.cache.enabled=true
aerospike.cluster.nodes=192.168.2.116:3000
aerospike.namespace=devapp
aerospike.policy.timeout=100
aerospikeCacheName = chat-cache
aerospikeTTL = 1825

# Information to expose through /endpoints/info endpoint
info.app.name=chatEvents
info.app.version=0.0.1-SNAPSHOT
info.app.java.source=1.8.0_171
info.app.java.target=1.8.0_171
info.app.archetype.version=0.0.1-SNAPSHOT

#disable spring boot metrics collection filter
endpoints.metrics.filter.enabled=false

# Consumer configuration
kafka.stream.names=msg_sent_consumer,msg_received_consumer
# Properties having dot(.) should be enclosed with square brackets
kafka.stream.default.[bootstrap.servers]=localhost:9092

kafka.stream.nodes[0].[group.id]=chat_sent
kafka.stream.nodes[0].destinations=msg_sent_node
kafka.stream.nodes[0].listenerClassName=com.ie.naukri.chatservice.chatEvents.kafka_consumer.CreatedMessageConsumer

kafka.stream.nodes[1].[group.id]=chat_sent
kafka.stream.nodes[1].destinations=msg_received_node
kafka.stream.nodes[1].listenerClassName=com.ie.naukri.chatservice.chatEvents.kafka_consumer.MessageReceiptConsumer
kafka.producer.default.acks=1

# Producer configuration
# Additional names for errors
kafka.producer.names=chat_producer,error,retry_error
# Properties having dot(.) should be enclosed with square brackets
kafka.producer.default.[bootstrap.servers]=localhost:9092
